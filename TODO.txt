# TODO: mix-experiment-tools ===================================================

# EXAMPLE ANALYSES =============================================================

+ Calculate fitness "by hand", then into `plot_mix_fitness()`

Approach  
- Model best practices described in paper
- Use this file to figure out clearest/easiest syntax to design for
- Only brief comments: let code be foreground
- Comments about what the data show (e.g. x-proportion vs x-logratio)

Open questions  
- Flesh out description? 
- Describe math in script? 


# DATA =========================================================================

smith 2010
- Double-check 2nd measurements are correct (not kan + no-antibiotic)

Yurtsev 2013
+ Reformat: simplify, follow original more closely
+ csv not tsv
+ Re-use author language in metadata


# OTHER FILES ==================================================================


# MIXEXPTR =====================================================================

Priority  
- Fix deprecated `theme(legend.position)` -> legend.position.inside
- `combine_figures(fig1, fig2, widths)`
- `initial_number` not `initial_count` (better for density, OD600)
- Plot dimensions should be set by `plot_mix_fitness`
  (but continued issues with `dev.new()` inside a function...)

Open questions  
- Just use `scales` as much as possible?
- Use `cowplot` instead of gtable, grid?
- Instead of top space with `ggtitle()`, theme option?

Testing  
- Test with other input vars
- Test with other datasets from ProcB paper
- Test warnings of invalid data
- Test with provided `var_names`
- Test with default `var_names`

Features
- Limits: Shared fitness scale
- Breaks: Linear/log
- Breaks: Not too many
- Labels
- Validate fitness data? 
- x limits: initial ratio should include 1
- y limits: shared scale, always include 1

Soon
- `match.arg()`
- Skeleton R package
- GitHub repository
- Minimal viable product

Later
- Plot fitness measures separately
  . `plot_strain_fitness()`
  . `plot_multilevel_fitness()`
    . `plot_total_group_fitness()`
    . `plot_within_group_fitness()`
- Custom color, fill
- Custom point shape
- Custom theme
- Custom limits
- Custom breaks
- Combine figures (after adding lines for fitted models, for example)
- Log-transformed values not 10^x


